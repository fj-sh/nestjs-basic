version: "3"

services:

  nestjs-basic1:
    container_name: nestjs-basic1
    build:
      context: .
      dockerfile: ./web1/Dockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - webnet
    restart: on-failure
    depends_on:
      - postgres

  nestjs-basic2:
    container_name: nestjs-basic2
    build:
      context: .
      dockerfile: ./web2/Dockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - webnet
    restart: on-failure
    depends_on:
      - postgres

  nginx:
    restart: always
    build: ./nginx
    links:
      - nestjs-basic1:nestjs-basic1
      - nestjs-basic2:nestjs-basic2
    networks:
      - webnet
    ports:
      - "80:80"
    depends_on:
      - nestjs-basic1
      - nestjs-basic2

  postgres:
    image: postgres:14
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/initdb:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - webnet
    environment:
      - TZ=Asia/Tokyo
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

networks:
  webnet:

volumes:
  postgres:
    driver: local
